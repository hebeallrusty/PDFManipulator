#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.9.5 on Sun Apr  5 21:18:29 2020
#

import wx

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class Frame_PDFManipulator(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: Frame_PDFManipulator.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((640, 480))
        self.Panel_PDFManipulator = wx.Panel(self, wx.ID_ANY)
        self.Notebook = wx.Notebook(self.Panel_PDFManipulator, wx.ID_ANY)
        self.Notebook_Split = wx.Panel(self.Notebook, wx.ID_ANY)
        self.Text_Split_InputFile = wx.TextCtrl(self.Notebook_Split, wx.ID_ANY, "", style=wx.TE_AUTO_URL | wx.TE_READONLY)
        self.Button_Split_InputFile = wx.Button(self.Notebook_Split, wx.ID_ANY, "...")
        self.Text_Split_StartPage = wx.TextCtrl(self.Notebook_Split, wx.ID_ANY, "")
        self.Text_Split_EndPage = wx.TextCtrl(self.Notebook_Split, wx.ID_ANY, "")
        self.Radiobox_Split_OutputOptions = wx.RadioBox(self.Notebook_Split, wx.ID_ANY, "Output Option", choices=["Single file containing all pages", "Multiple files containing one page each"], majorDimension=1, style=wx.RA_SPECIFY_COLS)
        self.Text_Split_SelectOutputFile = wx.TextCtrl(self.Notebook_Split, wx.ID_ANY, "", style=wx.TE_AUTO_URL | wx.TE_READONLY)
        self.Button_Split_OutputFile = wx.Button(self.Notebook_Split, wx.ID_ANY, "...")
        self.Notebook_Encrypt = wx.Panel(self.Notebook, wx.ID_ANY)
        self.Notebook_ = wx.Panel(self.Notebook, wx.ID_ANY)
        
        # Menu Bar
        self.frame_menubar = wx.MenuBar()
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(wx.ID_ANY, "&About", "")
        wxglade_tmp_menu.Append(wx.ID_ANY, "&Quit", "")
        self.frame_menubar.Append(wxglade_tmp_menu, "&Menu")
        self.SetMenuBar(self.frame_menubar)
        # Menu Bar end

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: Frame_PDFManipulator.__set_properties
        self.SetTitle("PDFManipulator")
        self.Text_Split_StartPage.SetMinSize((50, -1))
        self.Text_Split_EndPage.SetMinSize((50, -1))
        self.Radiobox_Split_OutputOptions.SetSelection(0)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: Frame_PDFManipulator.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_5 = wx.BoxSizer(wx.VERTICAL)
        Sizer_Split = wx.BoxSizer(wx.VERTICAL)
        Sizer_Split_OutputFile = wx.BoxSizer(wx.HORIZONTAL)
        Sizer_Split_OutputOptions = wx.BoxSizer(wx.HORIZONTAL)
        Sizer_Split_Pages = wx.BoxSizer(wx.VERTICAL)
        Sizer_Split_Pages_Last = wx.BoxSizer(wx.HORIZONTAL)
        Sizer_Split_Pages_First = wx.BoxSizer(wx.HORIZONTAL)
        Sizer_Split_InputFile = wx.BoxSizer(wx.HORIZONTAL)
        Label_Split_InputFile = wx.StaticText(self.Notebook_Split, wx.ID_ANY, "Select File:")
        Sizer_Split_InputFile.Add(Label_Split_InputFile, 0, wx.ALIGN_CENTER | wx.LEFT | wx.RIGHT, 5)
        Sizer_Split_InputFile.Add(self.Text_Split_InputFile, 10, wx.ALIGN_CENTER | wx.FIXED_MINSIZE, 0)
        Sizer_Split_InputFile.Add(self.Button_Split_InputFile, 0, wx.ALIGN_CENTER, 0)
        Sizer_Split.Add(Sizer_Split_InputFile, 1, wx.EXPAND, 0)
        static_line_1 = wx.StaticLine(self.Notebook_Split, wx.ID_ANY)
        Sizer_Split.Add(static_line_1, 0, wx.EXPAND, 0)
        Label_Split_StartPage = wx.StaticText(self.Notebook_Split, wx.ID_ANY, "First Page:")
        Label_Split_StartPage.SetMinSize((73, -1))
        Sizer_Split_Pages_First.Add(Label_Split_StartPage, 0, wx.ALIGN_CENTER | wx.LEFT | wx.RIGHT, 5)
        Sizer_Split_Pages_First.Add(self.Text_Split_StartPage, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        Sizer_Split_Pages.Add(Sizer_Split_Pages_First, 1, wx.EXPAND, 0)
        Label_Split_EndPage = wx.StaticText(self.Notebook_Split, wx.ID_ANY, "Last Page:")
        Label_Split_EndPage.SetMinSize((73, -1))
        Sizer_Split_Pages_Last.Add(Label_Split_EndPage, 0, wx.ALIGN_CENTER | wx.LEFT | wx.RIGHT, 5)
        Sizer_Split_Pages_Last.Add(self.Text_Split_EndPage, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        Sizer_Split_Pages.Add(Sizer_Split_Pages_Last, 1, wx.EXPAND, 0)
        Sizer_Split_OutputOptions.Add(Sizer_Split_Pages, 1, wx.EXPAND, 0)
        Sizer_Split_OutputOptions.Add(self.Radiobox_Split_OutputOptions, 2, wx.ALIGN_CENTER_HORIZONTAL | wx.LEFT | wx.RIGHT, 5)
        Sizer_Split.Add(Sizer_Split_OutputOptions, 1, wx.EXPAND, 0)
        static_line_2 = wx.StaticLine(self.Notebook_Split, wx.ID_ANY)
        Sizer_Split.Add(static_line_2, 0, wx.EXPAND, 0)
        Label_Split_SelectOutputFile = wx.StaticText(self.Notebook_Split, wx.ID_ANY, "Save File:")
        Sizer_Split_OutputFile.Add(Label_Split_SelectOutputFile, 0, wx.ALIGN_CENTER_VERTICAL | wx.LEFT | wx.RIGHT, 5)
        Sizer_Split_OutputFile.Add(self.Text_Split_SelectOutputFile, 10, wx.ALIGN_CENTER | wx.FIXED_MINSIZE, 0)
        Sizer_Split_OutputFile.Add(self.Button_Split_OutputFile, 0, wx.ALIGN_CENTER, 0)
        Sizer_Split.Add(Sizer_Split_OutputFile, 1, wx.EXPAND, 0)
        self.Notebook_Split.SetSizer(Sizer_Split)
        sizer_5.Add((0, 0), 0, 0, 0)
        sizer_5.Add((0, 0), 0, 0, 0)
        sizer_5.Add((0, 0), 0, 0, 0)
        sizer_5.Add((0, 0), 0, 0, 0)
        sizer_5.Add((0, 0), 0, 0, 0)
        sizer_5.Add((0, 0), 0, 0, 0)
        self.Notebook_Encrypt.SetSizer(sizer_5)
        self.Notebook.AddPage(self.Notebook_Split, "Split")
        self.Notebook.AddPage(self.Notebook_Encrypt, "Join")
        self.Notebook.AddPage(self.Notebook_, "Encrypt")
        sizer_2.Add(self.Notebook, 0, wx.EXPAND, 0)
        self.Panel_PDFManipulator.SetSizer(sizer_2)
        sizer_1.Add(self.Panel_PDFManipulator, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade

# end of class Frame_PDFManipulator

class MyApp(wx.App):
    def OnInit(self):
        self.frame = Frame_PDFManipulator(None, wx.ID_ANY, "")
        self.SetTopWindow(self.frame)
        self.frame.Show()
        return True

# end of class MyApp

if __name__ == "__main__":
    app = MyApp(0)
    app.MainLoop()
