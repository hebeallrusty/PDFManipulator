#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.9.5 on Sun Apr  5 19:52:28 2020
#

import wx

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class Frame_PDFManipulator(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: Frame_PDFManipulator.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((400, 300))
        self.Panel_PDFManipulator = wx.Panel(self, wx.ID_ANY)
        self.Notebook = wx.Notebook(self.Panel_PDFManipulator, wx.ID_ANY)
        self.notebook_1_pane_2 = wx.Panel(self.Notebook, wx.ID_ANY)
        self.Text_SelectFile = wx.TextCtrl(self.notebook_1_pane_2, wx.ID_ANY, "")
        self.checkbox_1 = wx.CheckBox(self.notebook_1_pane_2, wx.ID_ANY, "")
        self.Button = wx.Button(self.notebook_1_pane_2, wx.ID_ANY, "Select")
        self.Notebook_Join = wx.Panel(self.Notebook, wx.ID_ANY)
        self.Notebook_Encrypt = wx.Panel(self.Notebook, wx.ID_ANY)
        self.Notebook_ = wx.Panel(self.Notebook, wx.ID_ANY)
        
        # Menu Bar
        self.frame_menubar = wx.MenuBar()
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(wx.ID_ANY, "&About", "")
        wxglade_tmp_menu.Append(wx.ID_ANY, "&Quit", "")
        self.frame_menubar.Append(wxglade_tmp_menu, "&Menu")
        self.SetMenuBar(self.frame_menubar)
        # Menu Bar end

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: Frame_PDFManipulator.__set_properties
        self.SetTitle("frame")
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: Frame_PDFManipulator.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_5 = wx.BoxSizer(wx.VERTICAL)
        sizer_4 = wx.BoxSizer(wx.VERTICAL)
        sizer_3 = wx.BoxSizer(wx.VERTICAL)
        sizer_6 = wx.BoxSizer(wx.HORIZONTAL)
        Label_SelectFile = wx.StaticText(self.notebook_1_pane_2, wx.ID_ANY, "Select File")
        sizer_6.Add(Label_SelectFile, 0, 0, 0)
        sizer_6.Add(self.Text_SelectFile, 0, 0, 0)
        sizer_6.Add(self.checkbox_1, 0, 0, 0)
        sizer_6.Add(self.Button, 0, 0, 0)
        sizer_3.Add(sizer_6, 1, wx.EXPAND, 0)
        sizer_3.Add((0, 0), 0, 0, 0)
        sizer_3.Add((0, 0), 0, 0, 0)
        sizer_3.Add((0, 0), 0, 0, 0)
        sizer_3.Add((0, 0), 0, 0, 0)
        sizer_3.Add((0, 0), 0, 0, 0)
        self.notebook_1_pane_2.SetSizer(sizer_3)
        sizer_4.Add((0, 0), 0, 0, 0)
        sizer_4.Add((0, 0), 0, 0, 0)
        sizer_4.Add((0, 0), 0, 0, 0)
        sizer_4.Add((0, 0), 0, 0, 0)
        sizer_4.Add((0, 0), 0, 0, 0)
        sizer_4.Add((0, 0), 0, 0, 0)
        self.Notebook_Join.SetSizer(sizer_4)
        sizer_5.Add((0, 0), 0, 0, 0)
        sizer_5.Add((0, 0), 0, 0, 0)
        sizer_5.Add((0, 0), 0, 0, 0)
        sizer_5.Add((0, 0), 0, 0, 0)
        sizer_5.Add((0, 0), 0, 0, 0)
        sizer_5.Add((0, 0), 0, 0, 0)
        self.Notebook_Encrypt.SetSizer(sizer_5)
        self.Notebook.AddPage(self.notebook_1_pane_2, "Split")
        self.Notebook.AddPage(self.Notebook_Join, "Join")
        self.Notebook.AddPage(self.Notebook_Encrypt, "Encrypt")
        self.Notebook.AddPage(self.Notebook_, "")
        sizer_2.Add(self.Notebook, 0, wx.EXPAND, 0)
        static_line_1 = wx.StaticLine(self.Panel_PDFManipulator, wx.ID_ANY)
        sizer_2.Add(static_line_1, 0, wx.EXPAND, 0)
        sizer_2.Add((0, 0), 0, 0, 0)
        sizer_2.Add((0, 0), 0, 0, 0)
        sizer_2.Add((0, 0), 0, 0, 0)
        sizer_2.Add((0, 0), 0, 0, 0)
        self.Panel_PDFManipulator.SetSizer(sizer_2)
        sizer_1.Add(self.Panel_PDFManipulator, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade

# end of class Frame_PDFManipulator

class MyApp(wx.App):
    def OnInit(self):
        self.frame = Frame_PDFManipulator(None, wx.ID_ANY, "")
        self.SetTopWindow(self.frame)
        self.frame.Show()
        return True

# end of class MyApp

if __name__ == "__main__":
    app = MyApp(0)
    app.MainLoop()
